{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { UserContext } from \"../context/UserContext\"; // Importer le contexte utilisateur\nimport \"./Form.css\";\nimport \"./Form-Card.css\";\nimport etoile from \"../assets/favori.png\"; // Import de l'image de l'étoile\n\nconst BookList = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [favorites, setFavorites] = useState([]); // État pour stocker les favoris\n  const {\n    user\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [searchTerm, setSearchTerm] = useState(\"\"); // Stocke le terme de recherche\n  const [filteredBooks, setFilteredBooks] = useState([]); // Livres filtrés\n\n  useEffect(() => {\n    const fetchBooks = async () => {\n      try {\n        // Récupérer tous les livres\n        const response = await axios.get(\"http://localhost:8000/api/books\");\n        setBooks(response.data);\n        setFilteredBooks(response.data);\n        // Si l'utilisateur est connecté, récupérer ses favoris\n        if (user && user.userId) {\n          const favoritesResponse = await axios.get(`http://localhost:8000/api/books/users/${user.userId}/favorites`);\n          setFavorites(favoritesResponse.data.favorites); // Stocker les favoris\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des livres ou des favoris:\", error);\n      }\n    };\n    fetchBooks();\n  }, [user]);\n\n  // Fonction pour filtrer les livres en fonction du terme de recherche\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n    const filtered = books.filter(book => book.title.toLowerCase().includes(event.target.value.toLowerCase()) || book.author.toLowerCase().includes(event.target.value.toLowerCase()));\n    setFilteredBooks(filtered);\n  };\n  const handleCardClick = bookId => {\n    if (user && user.firstName) {\n      navigate(`/books/${bookId}`);\n    } else {\n      navigate(\"/login\");\n    }\n  };\n};\n_s(BookList, \"3m04SBM0FLPR2o91mcOw8L42bWo=\", false, function () {\n  return [useNavigate];\n});\n_c = BookList;\nexport default BookList;\nvar _c;\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["React","useEffect","useState","useContext","axios","Link","useNavigate","UserContext","etoile","BookList","_s","books","setBooks","favorites","setFavorites","user","navigate","searchTerm","setSearchTerm","filteredBooks","setFilteredBooks","fetchBooks","response","get","data","userId","favoritesResponse","error","console","handleSearch","event","target","value","filtered","filter","book","title","toLowerCase","includes","author","handleCardClick","bookId","firstName","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/book-club/client/src/components/BookList.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { UserContext } from \"../context/UserContext\"; // Importer le contexte utilisateur\r\nimport \"./Form.css\";\r\nimport \"./Form-Card.css\";\r\nimport etoile from \"../assets/favori.png\"; // Import de l'image de l'étoile\r\n\r\nconst BookList = () => {\r\n  const [books, setBooks] = useState([]);\r\n  const [favorites, setFavorites] = useState([]); // État pour stocker les favoris\r\n  const { user } = useContext(UserContext);\r\n  const navigate = useNavigate();\r\n  const [searchTerm, setSearchTerm] = useState(\"\"); // Stocke le terme de recherche\r\n  const [filteredBooks, setFilteredBooks] = useState([]); // Livres filtrés\r\n\r\n  useEffect(() => {\r\n    const fetchBooks = async () => {\r\n      try {\r\n        // Récupérer tous les livres\r\n        const response = await axios.get(\"http://localhost:8000/api/books\");\r\n        setBooks(response.data);\r\n        setFilteredBooks(response.data);\r\n        // Si l'utilisateur est connecté, récupérer ses favoris\r\n        if (user && user.userId) {\r\n          const favoritesResponse = await axios.get(\r\n            `http://localhost:8000/api/books/users/${user.userId}/favorites`\r\n          );\r\n          setFavorites(favoritesResponse.data.favorites); // Stocker les favoris\r\n        }\r\n      } catch (error) {\r\n        console.error(\r\n          \"Erreur lors de la récupération des livres ou des favoris:\",\r\n          error\r\n        );\r\n      }\r\n    };\r\n\r\n    fetchBooks();\r\n  }, [user]);\r\n\r\n  // Fonction pour filtrer les livres en fonction du terme de recherche\r\n  const handleSearch = (event) => {\r\n    setSearchTerm(event.target.value);\r\n    const filtered = books.filter(\r\n      (book) =>\r\n        book.title.toLowerCase().includes(event.target.value.toLowerCase()) ||\r\n        book.author.toLowerCase().includes(event.target.value.toLowerCase())\r\n    );\r\n    setFilteredBooks(filtered);\r\n  };\r\n\r\n  const handleCardClick = (bookId) => {\r\n    if (user && user.firstName) {\r\n      navigate(`/books/${bookId}`);\r\n    } else {\r\n      navigate(\"/login\");\r\n    }\r\n  };\r\n\r\n \r\n};\r\n\r\nexport default BookList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,SAASC,WAAW,QAAQ,wBAAwB,CAAC,CAAC;AACtD,OAAO,YAAY;AACnB,OAAO,iBAAiB;AACxB,OAAOC,MAAM,MAAM,sBAAsB,CAAC,CAAC;;AAE3C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM;IAAEa;EAAK,CAAC,GAAGZ,UAAU,CAACI,WAAW,CAAC;EACxC,MAAMS,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExDD,SAAS,CAAC,MAAM;IACd,MAAMoB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,iCAAiC,CAAC;QACnEX,QAAQ,CAACU,QAAQ,CAACE,IAAI,CAAC;QACvBJ,gBAAgB,CAACE,QAAQ,CAACE,IAAI,CAAC;QAC/B;QACA,IAAIT,IAAI,IAAIA,IAAI,CAACU,MAAM,EAAE;UACvB,MAAMC,iBAAiB,GAAG,MAAMtB,KAAK,CAACmB,GAAG,CACvC,yCAAyCR,IAAI,CAACU,MAAM,YACtD,CAAC;UACDX,YAAY,CAACY,iBAAiB,CAACF,IAAI,CAACX,SAAS,CAAC,CAAC,CAAC;QAClD;MACF,CAAC,CAAC,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CACX,2DAA2D,EAC3DA,KACF,CAAC;MACH;IACF,CAAC;IAEDN,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;;EAEV;EACA,MAAMc,YAAY,GAAIC,KAAK,IAAK;IAC9BZ,aAAa,CAACY,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACjC,MAAMC,QAAQ,GAAGtB,KAAK,CAACuB,MAAM,CAC1BC,IAAI,IACHA,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACR,KAAK,CAACC,MAAM,CAACC,KAAK,CAACK,WAAW,CAAC,CAAC,CAAC,IACnEF,IAAI,CAACI,MAAM,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACR,KAAK,CAACC,MAAM,CAACC,KAAK,CAACK,WAAW,CAAC,CAAC,CACvE,CAAC;IACDjB,gBAAgB,CAACa,QAAQ,CAAC;EAC5B,CAAC;EAED,MAAMO,eAAe,GAAIC,MAAM,IAAK;IAClC,IAAI1B,IAAI,IAAIA,IAAI,CAAC2B,SAAS,EAAE;MAC1B1B,QAAQ,CAAC,UAAUyB,MAAM,EAAE,CAAC;IAC9B,CAAC,MAAM;MACLzB,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC;AAGH,CAAC;AAACN,EAAA,CArDID,QAAQ;EAAA,QAIKH,WAAW;AAAA;AAAAqC,EAAA,GAJxBlC,QAAQ;AAuDd,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}